const moment = require("moment");
const { flexMessage, textMessage, flexHelp } = require("./style");
const { randList, isInStr } = require("./utils");

function replyMessage(msg, db) {
  let ret = {};
  let now = moment().add(7, "hours");

  let hours = now.hour();
  let dateOpt = "";
  let cmd = {
    menu: [
      "food",
      "menu",
      "‡πÄ‡∏°‡∏ô‡∏π",
      "‡∏≠‡∏≤‡∏´‡∏≤‡∏£",
      "meal",
      "‡∏°‡∏∑‡πâ‡∏≠",
      "today",
      "‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ",
      "kow",
      "hew",
    ],
    breakfast: ["breakfast", "bf", "morning", "‡πÄ‡∏ä‡πâ‡∏≤", "morn"],
    lunch: ["lunch", "midday", "‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏á"],
    dinner: ["dinner", "‡πÄ‡∏¢‡πá‡∏ô"],
    nextMeal: ["‡∏´‡∏¥‡∏ß", "hungry", "‡∏ï‡πà‡∏≠‡πÑ‡∏õ"],
    help: ["help", "cmd", "‡∏ä‡πà‡∏ß‡∏¢", "‡πÉ‡∏ä‡πâ", "‡∏¢‡∏±‡∏á‡πÑ‡∏á", "how", "use"],
    tomorrow: ["tomorrow", "tmr", "‡∏û‡∏£‡∏∏‡πà‡∏á‡∏ô‡∏µ‡πâ", "‡∏û‡∏ô", "‡∏û.‡∏ô."],
    bug: ["bug", "comment", "‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥", "‡∏ö‡∏±‡∏Ñ"],
    yesterday: ["‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ß‡∏≤‡∏ô", "yesterday", "ytd"],
    link: ["link", "‡∏•‡∏¥‡πâ‡∏á‡∏Å‡πå", "‡∏•‡∏¥‡πâ‡∏á‡∏Ñ‡πå"],
    feedback: [
      "‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô",
      "evaluate",
      "menu evaluation",
      "eval",
      "‡πÉ‡∏´‡πâ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô",
      "feedback",
    ],
    suggest: ["suggest", "‡πÄ‡∏™‡∏ô‡∏≠", "menu suggestion"],
  };

  let fullCmdList = [];
  for (key in cmd) {
    if (cmd.hasOwnProperty(key)) {
      cmd[key].forEach((x) => {
        fullCmdList.push(x);
      });
    }
  }
  // console.log(fullCmdList);

  let cmdList = [
    "Menu",
    "Breakfast",
    "Lunch",
    "Dinner",
    "Tmr",
    "M/D/YYYY",
    "Bug",
    "Suggest",
    "Week",
    "‚ú®Some Easter Eggs‚ú®",
  ];

  let noCmdList = [
    "üôÑ",
    "ü§®",
    "üò™",
    "‡∏à‡∏£‡∏¥‡∏á‡∏õ‡πà‡∏≤‡∏ß‡∏ß‡∏ß",
    "üçâ",
    "ü•∫",
    "‡πÄ‡∏õ‡∏ô‡∏á‡∏á",
    "‡∏°‡πà‡∏≤‡∏¢‡πÄ‡∏Ç‡πâ‡∏≤‡∏à‡∏≤‡∏¢‡∏¢",
    "‡πÄ‡∏Ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏£‡∏±‡∏Å‡∏Å‡πá‡∏Ñ‡∏ß‡∏£‡∏û‡∏≠",
    "‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô‡∏£‡∏π‡πâ",
    "‡πÑ‡∏õ‡∏ô‡∏≠‡∏ô‡∏Å‡∏±‡∏ô‡πÄ‡∏ñ‡∏≠‡∏∞",
    "‡πÄ‡∏°‡∏µ‡πä‡∏¢‡∏ß",
    "‡πÇ‡∏Æ‡πà‡∏á ‡πÜ",
    "https://docs.google.com/spreadsheets/d/1GBVRpE7PFA-rDCZlnV0pyBZfdIbFRFVdLO8EwTMFPpw/edit#gid=1095799098",
  ];

  if (isInStr(msg, cmd["bug"])) {
    return {
      desc: "Report bugs or Comments : https://forms.gle/xG1S6Xn28J5onKfG6",
      reply: textMessage(
        "Report bugs or Comments : https://forms.gle/xG1S6Xn28J5onKfG6"
      ),
    };
  }

  if (isInStr(msg, cmd["nextMeal"])) {
    if (hours >= 19) {
      msg = "breakfast";
      now = now.add(1, "days");
      dateOpt = " (Tomorrow)";
    } else if (hours >= 13) {
      msg = "dinner";
    } else if (hours >= 9) {
      msg = "lunch";
    } else {
      msg = "breakfast";
    }
  } else if (isInStr(msg, cmd["breakfast"])) {
    if (hours >= 9) {
      now = now.add(1, "days");
      dateOpt = " (Tomorrow)";
    }
  } else if (isInStr(msg, cmd["lunch"])) {
    if (hours >= 13) {
      now = now.add(1, "days");
      dateOpt = " (Tomorrow)";
    }
  } else if (isInStr(msg, cmd["dinner"])) {
    if (hours >= 19) {
      now = now.add(1, "days");
      dateOpt = " (Tomorrow)";
    }
  } else if (isInStr(msg, cmd["menu"])) {
    if (hours >= 19) {
      now = now.add(1, "days");
      dateOpt = " (Tomorrow)";
    }
  }

  if (isInStr(msg, cmd["tomorrow"])) {
    now = now.add(1, "days");
    dateOpt = " (Tomorrow)";
    msg = "menu";
  }
  if (isInStr(msg, cmd["yesterday"])) {
    return {
      desc: "yesterday",
      reply: textMessage("‡πÑ‡∏°‡πà‡∏ö‡∏≠‡∏Å‡∏Å‡∏Å‡∏Å ‡∏≠‡∏î‡∏µ‡∏ï‡∏°‡∏±‡∏ô‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏õ‡πÅ‡∏£‡πâ‡∏ß"),
    };
  }

  let date, date2;

  if (msg in db) {
    date = msg;
    now = moment(date, "M/D/YYYY");
    date2 = now.format("D MMM");
    msg = "menu";
  } else {
    date = now.format("M/D/YYYY");
    date2 = now.format("D MMM");
  }

  if (date in db) {
    let menu = db[date];
    let meals = {};

    let breakfast = [...menu.Breakfast];
    let lunch = [...menu.Lunch];
    let dinner = [...menu.Dinner];

    if (isInStr(msg, cmd["menu"])) {
      meals = {
        breakfast,
        lunch,
        dinner,
      };
    } else if (isInStr(msg, cmd["breakfast"])) {
      meals["breakfast"] = breakfast;
    } else if (isInStr(msg, cmd["lunch"])) {
      meals["lunch"] = lunch;
    } else if (isInStr(msg, cmd["dinner"])) {
      meals["dinner"] = dinner;
    } else if (isInStr(msg, cmd["help"])) {
      return {
        desc: "flexHelp",
        reply: flexHelp(cmdList),
      };
    } else if (isInStr(msg, ["‡∏ß‡∏¥‡∏ô‡∏ô‡πà‡∏≤‡∏£‡∏±‡∏Å"])) {
      return {
        desc: "easter egg",
        reply: textMessage("‡∏≠‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏à‡∏£‡∏¥‡∏á‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î"),
      };
    } else if (isInStr(msg, ["itzmeowww"])) {
      return {
        desc: "easter egg",
        reply: textMessage("‡∏ß‡πâ‡∏≤‡∏ß‡πÜ‡πÜ‡πÜ‡πÜ‡πÜ‡πÜ‡πÜ"),
      };
    } else if (isInStr(msg, ["‡∏ß‡∏¥‡∏ô", "win", "thanasan", "‡∏ò‡∏ô‡∏≤‡∏™‡∏£‡∏£‡∏Ñ‡πå"])) {
      let retList = ["‡∏ß‡∏¥‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡∏õ‡πà‡∏≤‡∏ß ‡πÉ‡∏ä‡πà‡∏ß‡∏¥‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡∏õ‡πà‡∏≤‡∏ß"];
      return {
        desc: "easter egg",
        reply: textMessage(randList(retList)),
      };
    } else if (isInStr(msg, ["mimiemie"])) {
      return {
        desc: "easter egg",
        reply: textMessage("‡∏Ñ‡∏ô‡∏ô‡∏µ‡πâ‡∏ß‡∏≤‡∏î‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏±‡∏ö ‡∏™‡∏ß‡∏¢‡∏™‡∏∏‡∏î"),
      };
    } else if (isInStr(msg, ["‡∏û‡∏µ‡πà‡∏£‡∏´‡∏±‡∏™‡πÄ‡∏õ‡πá‡∏ô‡πÉ‡∏Ñ‡∏£‡πÄ‡∏≠‡πà‡∏¢"])) {
      return {
        desc: "easter egg",
        reply: textMessage("‡∏û‡∏µ‡∏µ‡πà‡πÅ‡∏ä‡∏°‡∏õ‡πå‡πÄ‡∏≠‡∏á‡πÅ‡∏´‡∏•‡∏∞‡∏à‡πâ‡∏≤‡∏≤"),
      };
    } else if (isInStr(msg, cmd["link"])) {
      return {
        desc: "link",
        reply: textMessage(
          "https://docs.google.com/spreadsheets/d/1GBVRpE7PFA-rDCZlnV0pyBZfdIbFRFVdLO8EwTMFPpw/edit#gid=1095799098"
        ),
      };
    } else if (isInStr(msg, cmd["feedback"])) {
      return {
        desc: "feedback",
        reply: textMessage("https://forms.office.com/r/snawiSUY8H"),
      };
    } else {
      let chance = Math.random() * 10;
      if (true)
        return {
          desc: "noCmdList",
          reply: textMessage(randList(noCmdList)),
        };
      else
        return {
          desc: "fullCmdList",
          reply: textMessage("Try : " + randList(fullCmdList)),
        };
    }

    let theDay = now.format("ddd");
    let msgTitle = theDay + " " + date2 + dateOpt;
    let showMenu = "";
    showMenu += Object.keys(meals).join(",");

    return {
      desc: msgTitle + " " + showMenu,
      reply: flexMessage(msgTitle, meals),
    };
  } else {
    return {
      desc: "Service is not available",
      reply: textMessage(
        "Please try again later or visit https://docs.google.com/spreadsheets/d/1GBVRpE7PFA-rDCZlnV0pyBZfdIbFRFVdLO8EwTMFPpw/edit#gid=1095799098"
      ),
    };
  }
}

module.exports = {
  replyMessage,
};
